openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for user management, authentication, and authorization

servers:
  - url: http://localhost:5000

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User created successfully
        '400':
          description: Missing username or password, or user already exists

  /auth/login:
    post:
      summary: Sign in a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '401':
          description: Bad username or password

  /auth/reset_password:
    post:
      summary: Reset user password
      tags:
        - Authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
              required:
                - old_password
                - new_password
      responses:
        '200':
          description: Password updated successfully
        '400':
          description: Invalid password
        '401':
          description: Unauthorized

  /user/{user_id}:
    put:
      summary: Update user information
      tags:
        - User Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                active:
                  type: boolean
                role:
                  type: string
                  enum: [USER, ADMIN]
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Invalid role provided
        '403':
          description: Not authorized to modify this user
        '404':
          description: User not found

    delete:
      summary: Delete a user
      tags:
        - User Management
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully
        '403':
          description: Not authorized to delete this user
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT